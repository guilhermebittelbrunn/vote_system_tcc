import Entity from '@core/domain/Entity';
import UniqueEntityID from '@core/domain/UniqueEntityID';
import { Either, right } from '@core/logic/Either';
import GenericAppError from '@core/logic/GenericAppError';

interface I{{pascalCase name}}Props {
    --dbInfo--
}

export default class {{pascalCase name}} extends Entity<I{{pascalCase name}}Props> {
    constructor(props: I{{pascalCase name}}Props, id?: UniqueEntityID) {
        super(props, id);
    }

    get id(): UniqueEntityID {
        return this._id;
    }

    public static create(
        props: I{{pascalCase name}}Props,
        id?: UniqueEntityID,
    ): Either<GenericAppError, {{pascalCase name}}> {
        return right(new {{pascalCase name}}(props, id));
    }
}
