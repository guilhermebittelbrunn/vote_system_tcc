version: '3.9'
services:
  api:
    container_name: voting_api
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - database
      - rabbitmq
    volumes:
      - ./:/usr/src/app
    command: yarn dev

  database:
    container_name: voting_database
    image: postgres:latest
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${POSTGRES_VOLUME_PATH}:/var/lib/postgresql/data

  rabbitmq:
    container_name: comanda10-rabbitmq
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${AWS_MQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${AWS_MQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/dev"
    ports:
      - 5672:5672
      - 15672:15672
